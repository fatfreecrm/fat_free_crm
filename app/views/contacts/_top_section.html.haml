= hook(:contact_top_section, self, :f => f) do
  .section
    %table
      %tr
        %td
          .label.top.req #{t :first_name}:
          = f.text_field :first_name
        %td= spacer
        %td
          .label.top{ :class => "#{Setting.require_last_names ? 'req' : ''}" } #{t :last_name}:
          = f.text_field :last_name
      %tr
        %td
          .label #{t :email}:
          = f.text_field :email
        %td= spacer
        %td
          .label #{t :phone}:
          = f.text_field :phone

    %table
      = fields_for(@account) do |a|
        = a.hidden_field :user_id
        = a.hidden_field :assigned_to
        = a.hidden_field :access, :value => Setting.default_access
        %tr
          %td
            .label
              #{t :account}
              %span#account_create_title
                (#{t :create_new} #{t :or} <a href='#' onclick='crm.select_account(1); return false;'>#{t :select_existing}</a>):
              %span#account_select_title
                (<a href='#' onclick='crm.create_account(1); return false;'>#{t :create_new}</a> #{t :or} #{t :select_existing}):
              %span#account_disabled_title :

            -# Add [-- None --] account choice when editing existing contact that has an account.
            - options = {} and (options[:include_blank] = "" unless @contact.new_record? || @contact.account.blank?)
            = account_select(options)

            = a.text_field :name, :style => "width:324px; display:none;"
          %td= spacer
          %td
            .label #{t :assigned_to}:
            = user_select(:contact)

        - if Setting.background_info && Setting.background_info.include?(:contact)
          %tr
            %td(colspan="3")
              .label= t(:background_info) << ':'
              = f.text_area :background_info, :style =>"width:500px", :rows => 3

        = render :partial => "/shared/tags", :locals => {:f => f, :span => 3}

        = hook(:contact_top_section_bottom, self, :f => f)
