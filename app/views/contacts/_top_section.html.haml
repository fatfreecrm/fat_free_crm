.section
  %table
    %tr
      %td
        .label.top.req #{t :first_name}:
        = f.text_field :first_name
      %td= spacer
      %td
        .label.top.req #{t :last_name}:
        = f.text_field :last_name
    %tr
      %td
        .label #{t :email}:
        = f.text_field :email
      %td= spacer
      %td
        .label #{t :phone}:
        = f.text_field :phone

  %table
    = fields_for(@account) do |a|
      = a.hidden_field :user_id
      = a.hidden_field :assigned_to
      = a.hidden_field :access, :value => Setting.default_access
      %tr
        %td
          .label
            #{t :account}
            %span#account_create_title
              (#{t :create_new} #{t :or} <a href='#' onclick='crm.select_account(1); return false;'>#{t :select_existing}</a>):
            %span#account_select_title
              (<a href='#' onclick='crm.create_account(1); return false;'>#{t :create_new}</a> #{t :or} #{t :select_existing}):
            %span#account_disabled_title :

          -# Add [-- None --] account choice when editing existing contact that has an account.
          - options = { :selected => @account.id || 0 }
          - options[:include_blank] = t(:select_none) unless @contact.new_record? || @contact.account.blank?

          = collection_select :account, :id, @accounts, :id, :name, options, { :style => "width:330px; display:none;" }
          = a.text_field :name, :style => "width:324px; display:none;"
        %td= spacer
        %td
          .label #{t :assigned_to}:
          = collection_select :contact, :assigned_to, @users, :id, :full_name, { :include_blank => t(:myself) }, { :style => "width:160px" }

      - if Setting.background_info && Setting.background_info.include?(:contact)
        %tr
          %td(colspan="3")
            .label= t(:background_info) << ':'
            = f.text_area :background_info, :style =>"width:500px", :rows => 3

      = hook(:contact_top_section_bottom, self, :f => f)

= hook(:contact_top_section_after, self, :f => f)
