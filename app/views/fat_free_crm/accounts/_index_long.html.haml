- amount = account.pipeline_opportunities.map(&:weighted_amount).sum
%li.highlight[account]
  .flex-container
    %h3= link_to(account.name, account)
    = render "accounts/account_tools", account: account
  -# - if account.category
  -#   .strip.badge.badge-info{class: account.category} #{t(account.category)}
  -# - else
  -#   .strip.badge.badge-info{style: "color: gray;"} #{t :other}
  %div
    = account.location + ", " unless account.location.blank?
    - user_name = account.user.try(:full_name)
    - if user_name
      = t(:added_by, time_ago: timeago(account.created_at), user: h(user_name)).html_safe << " | "
    - else
      = t(:added_ago, value: timeago(account.created_at)).html_safe << " | "
    = t('pluralize.contact', account.contacts_count) + " | "
    = t('pluralize.opportunity', account.opportunities_count)

  %div
    -# = stars_for(account)
    = " | ".html_safe << link_to(account.website, account.website.to_url) if account.website.present?
    = " | ".html_safe << link_to_email(account.email) if account.email.present?
    = " | ".html_safe << t(:phone_small) << ": " << (account.toll_free_phone? ? account.toll_free_phone : account.phone) if account.toll_free_phone? || account.phone?

  - if account.tags.present?
    .tags= tags_for_index(account)

  = hook(:account_bottom, self, account: account)
