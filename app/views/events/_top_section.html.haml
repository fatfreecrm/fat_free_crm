= hook(:event_top_section, self, :f => f) do
  .section
    %table
      %tr
        %td(colspan="5")
          .label.top.req #{t :name}:
          = f.text_field :name, :style => "width:500px"
      %tr
        - dfmt = '%d/%m/%Y' 
        - tfmt = '%I:%M%p'
        %td
          .datetime
            %p.datepair
              = f.text_field :calendar_start_date, :value => (f.object.starts_at.nil? ? nil : f.object.starts_at.strftime(dfmt)), :style => "width:90px;", :autocomplete => :off, :class => 'date2 start'
              -#= f.text_field :calendar_time_start, :value => (f.object.starts_at.nil? ? nil : f.object.starts_at.strftime(tfmt)), :style => "width:90px;", :autocomplete => :off, :class => 'time start'
              = f.time_select :calendar_start_time, :combined => true, :default => Time.now.change(:hour => 11, :min => 30), :minute_interval => 15, :time_separator => "", :start_hour => 9, :end_hour => 19 
              = ' to '
              = f.time_select :calendar_end_time, :combined => true, :default => Time.now.change(:hour => 11, :min => 30), :style =>"width:500px", :minute_interval => 15, :time_separator => "", :start_hour => 9, :end_hour => 19
              = f.text_field :calendar_end_date, :value => (f.object.starts_at.nil? ? nil : f.object.starts_at.strftime(dfmt)), :style => "width:90px;", :autocomplete => :off, :class => 'date2 end'
    %table
      %tr
        %td
          .label #{t :assigned_to}:
          = user_select(:contact, @users, current_user)
        %td= spacer
        %td
          .label #{t :category}:
          = f.select :category, Setting.unroll(:event_category), { :selected => (@event.category || "other").to_sym, :include_blank => t(:other) }, { :style => "width:160px" }
      %tr
        %td
          .label #{t :contact_group}:
          -#debugger
          -if @contact_group.nil?
            = f.select :contact_group_id, ContactGroup.all.map{ |cg| [cg.name, cg.id]}, { :selected => ("none".to_sym), :include_blank => t(:none) }, { :style => "width:160px" }
          -else
            = f.select :contact_group_id, ContactGroup.all.map{ |cg| [cg.name, cg.id]}, { :selected => @contact_group.id, :include_blank => t(:none) }, { :style => "width:160px" }
    
      - if Setting.background_info && Setting.background_info.include?(:event)
        %tr
          %td(colspan="5")
            .label= t(:background_info) << ':'
            = f.text_area :background_info, :style =>"width:500px", :rows => 3

      = render :partial => "/shared/tags", :locals => {:f => f, :span => 3}

      = hook(:event_top_section_bottom, self, :f => f)
